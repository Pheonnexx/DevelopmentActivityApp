describe("selection-buttons",function(){var e,t,o,s;beforeEach(function(){t=$('<label class="selectable">Small<input type="radio" name="size" id="small" value="small" /></label><label class="selectable">Medium<input type="radio" name="size" id="medium" value="medium" /></label><label class="selectable">Large<input type="radio" name="size" id="large" value="large" /></label>'),s=$('<label class="selectable">Eggs<input id="eggs" name="food" value="eggs" type="checkbox" /></label><label class="selectable">Bread<input id="bread" name="food" value="bread" type="checkbox" /></label><label class="selectable">Fruit<input id="fruit" name="food" value="fruit" type="checkbox" /></label>'),e=t.find("input"),o=s.find("input"),$(document.body).append(t),$(document.body).append(s)}),afterEach(function(){t.remove(),s.remove()}),describe("RadioButtons",function(){it("Should create a new instance with the correct interface",function(){var t=new GOVUK.RadioButtons(e);expect(t.getSelections).toBeDefined(),expect(t.bindEvents).toBeDefined(),expect(t.markSelected).toBeDefined(),expect(t.markFocused).toBeDefined()}),it("Should set the selectedClass property if sent in as an option",function(){var t=new GOVUK.RadioButtons(e,{selectedClass:"selectable-selected"});expect(t.selectedClass).toEqual("selectable-selected")}),it("Should set the focusedClass property if sent in as an option",function(){var t=new GOVUK.RadioButtons(e,{focusedClass:"selectable-focused"});expect(t.focusedClass).toEqual("selectable-focused")}),describe("getSelections method",function(){it("Should mark the label of any checked radios as selected",function(){var t={markSelected:GOVUK.RadioButtons.prototype.markSelected,$elms:e,selectedClass:"selected"};e.eq(0).attr("checked",!0),spyOn(t,"markSelected").andCallThrough(),GOVUK.RadioButtons.prototype.getSelections.call(t),expect(t.markSelected).toHaveBeenCalled(),expect(e.eq(0).parent("label").hasClass("selected")).toBe(!0)})}),describe("setEventNames method",function(){it("Should set the selectionEvents and focusEvents properties on the instance",function(){var e={};GOVUK.RadioButtons.prototype.setEventNames.call(e),expect("undefined"!=typeof e.focusEvents).toBe(!0),expect("undefined"!=typeof e.selectionEvents).toBe(!0)})}),describe("bindEvents method",function(){it("Should bind click and change events to each radio",function(){var t={$elms:e,selectionEvents:"click change",focusEvents:"focus blur",markSelected:function(){},markFocused:function(){}},o=!1;spyOn($.fn,"on").andCallFake(function(e){return"click change"===e&&(o=!0),$.fn}),expect($.fn.on.calls.length).toEqual(0),GOVUK.RadioButtons.prototype.bindEvents.call(t),expect($.fn.on).toHaveBeenCalled(),expect(o).toEqual(!0)}),it("Should call the markSelected method on any checked radio that's the target of an event",function(){var t={$elms:e,selectionEvents:"click change",focusEvents:"focus blur",markSelected:function(){},markFocused:function(){}};spyOn($.fn,"on").andCallFake(function(e,t){return"click change"===e&&(callback=t),$.fn}),spyOn(t,"markSelected"),t.$elms.eq(0).attr("checked",!0),GOVUK.RadioButtons.prototype.bindEvents.call(t),callback({target:t.$elms[0]}),expect(t.markSelected).toHaveBeenCalled()})}),describe("markSelected method",function(){it("Should add the selectedClass class to the label of the sent in radio",function(){var t={selections:{size:!1},selectedClass:"selected"},o=e.eq(0);GOVUK.RadioButtons.prototype.markSelected.call(t,o),expect(o.parent("label").hasClass("selected")).toEqual(!0)}),it("Should remove the selectedClass class from the label of the previously selected radio",function(){var o={selections:{size:e.eq(1)},selectedClass:"selected"},s=e.eq(0);t.eq(1).addClass("selected"),GOVUK.RadioButtons.prototype.markSelected.call(o,s),expect($("#medium").parent("label").hasClass("selected")).toEqual(!1)})}),describe("markFocused method",function(){var o={focused:!1,focusedClass:"focused"};it("Should add the focusedClass class to the sent radio if it is focused",function(){GOVUK.RadioButtons.prototype.markFocused.apply(o,[e.eq(0),"focused"]),expect(t.eq(0).hasClass(o.focusedClass)).toBe(!0)}),it("Should remove the focusedClass class from the sent radio if it is blurred",function(){t.eq(0).addClass(o.focusedClass),GOVUK.RadioButtons.prototype.markFocused.apply(o,[e.eq(0),"blurred"]),expect(t.eq(0).hasClass(o.focusedClass)).toBe(!1)})})}),describe("CheckboxButtons",function(){it("Should create a new instance with the correct interface",function(){var e=new GOVUK.CheckboxButtons(o);expect(e.getSelections).toBeDefined(),expect(e.bindEvents).toBeDefined(),expect(e.markSelected).toBeDefined(),expect(e.markFocused).toBeDefined()}),describe("getSelections method",function(){it("Should add the selectedClass class to the label of a checkbox that is checked",function(){var e={$elms:o,markSelected:function(){}};e.$elms.eq(0).attr("checked",!0),spyOn(e,"markSelected"),GOVUK.CheckboxButtons.prototype.getSelections.call(e),expect(e.markSelected).toHaveBeenCalled()})}),describe("setEventNames method",function(){it("Should set the selectionEvents and focusEvents properties on the instance",function(){var e={};GOVUK.CheckboxButtons.prototype.setEventNames.call(e),expect("undefined"!=typeof e.focusEvents).toBe(!0),expect("undefined"!=typeof e.selectionEvents).toBe(!0)})}),describe("bindEvents method",function(){var e;beforeEach(function(){e={$elms:o}}),it("Should add a click event to each checkbox that fires the markSelected method",function(){var t=!1;e.markSelected=function(){},e.markFocused=function(){},e.selectionEvents="click",e.focusEvents="focus blur",spyOn(e,"markSelected"),spyOn($.fn,"on").andCallFake(function(e,o){return"click"===e&&(t=!0,callback=o),$.fn}),o.eq(0).attr("checked",!0),GOVUK.CheckboxButtons.prototype.bindEvents.call(e),expect(t).toBe(!0),callback({target:o.eq(0)}),expect(e.markSelected).toHaveBeenCalled()}),it("Should add focus and blur events to each checkbox that fires the markFocused method",function(){var t=!1;e.markFocused=function(){},e.markSelected=function(){},e.selectionEvents="click",e.focusEvents="focus blur",spyOn(e,"markFocused"),spyOn($.fn,"on").andCallFake(function(e,o){return"focus blur"===e&&(t=!0,callback=o),$.fn}),GOVUK.CheckboxButtons.prototype.bindEvents.call(e),expect(t).toBe(!0),callback({target:o.eq(0),type:"focus"}),expect(e.markFocused).toHaveBeenCalled()})}),describe("markSelected method",function(){var e={selectedClass:"selected"};it("Should add the selectedClass class to a checked checkbox",function(){o.eq(0).attr("checked",!0),GOVUK.CheckboxButtons.prototype.markSelected.call(e,o.eq(0)),expect(s.eq(0).hasClass(e.selectedClass)).toBe(!0)}),it("Should remove the selectedClass class from an unchecked checkbox",function(){o.eq(0).addClass(e.selectedClass),GOVUK.CheckboxButtons.prototype.markSelected.call(e,o.eq(0)),expect(s.eq(0).hasClass(e.selectedClass)).toBe(!1)})}),describe("markFocused method",function(){var e={focused:!1,focusedClass:"focused"};it("Should add the focusedClass class to the sent radio if it is focused",function(){GOVUK.CheckboxButtons.prototype.markFocused.apply(e,[o.eq(0),"focused"]),expect(s.eq(0).hasClass(e.focusedClass)).toBe(!0)}),it("Should remove the focusedClass class from the sent radio if it is blurred",function(){s.eq(0).addClass(e.focusedClass),GOVUK.CheckboxButtons.prototype.markFocused.apply(e,[o.eq(0),"blurred"]),expect(s.eq(0).hasClass(e.focusedClass)).toBe(!1)})})}),describe("selectionButtons",function(){it("Should create an instance of RadioButtons for a set of radios",function(){spyOn(GOVUK,"RadioButtons"),GOVUK.selectionButtons(e),expect(GOVUK.RadioButtons).toHaveBeenCalled()}),it("Should create an instance of CheckboxButtons for a set of checkboxes",function(){spyOn(GOVUK,"CheckboxButtons"),GOVUK.selectionButtons(o),expect(GOVUK.CheckboxButtons).toHaveBeenCalled()}),it("Should create instances of RadioButtons and CheckboxButtons for a set containing radios and checkboxes",function(){spyOn(GOVUK,"RadioButtons"),spyOn(GOVUK,"CheckboxButtons"),GOVUK.selectionButtons(o.add(e)),expect(GOVUK.RadioButtons).toHaveBeenCalled(),expect(GOVUK.CheckboxButtons).toHaveBeenCalled()})})});